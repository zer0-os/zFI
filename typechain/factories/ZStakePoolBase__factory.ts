/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZStakePoolBase,
  ZStakePoolBaseInterface,
} from "../ZStakePoolBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wild",
        type: "address",
      },
      {
        internalType: "contract zStakePoolFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_initBlock",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_weight",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_fromVal",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_toVal",
        type: "uint32",
      },
    ],
    name: "PoolWeightUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lockedFrom",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lockedUntil",
        type: "uint64",
      },
    ],
    name: "StakeLockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "yieldRewardsPerWeight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lastYieldDistribution",
        type: "uint64",
      },
    ],
    name: "Synchronized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "YieldClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract zStakePoolFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositId",
        type: "uint256",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "lockedFrom",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockedUntil",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isYield",
            type: "bool",
          },
        ],
        internalType: "struct IPool.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFlashPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastYieldDistribution",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "now256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "pendingYieldRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerWeight",
        type: "uint256",
      },
    ],
    name: "rewardToWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_weight",
        type: "uint32",
      },
    ],
    name: "setWeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testFunc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depositId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "lockedUntil",
        type: "uint64",
      },
    ],
    name: "updateStakeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subYieldRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usersLockingWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weight",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerWeight",
        type: "uint256",
      },
    ],
    name: "weightToReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldRewardsPerWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200283a3803806200283a8339810160408190526200003491620001fe565b60016000556001600160a01b038416620000955760405162461bcd60e51b815260206004820152601d60248201527f57494c4420506f6f6c206663742061646472657373206e6f742073657400000060448201526064015b60405180910390fd5b6001600160a01b038316620000ed5760405162461bcd60e51b815260206004820152601a60248201527f706f6f6c20746f6b656e2061646472657373206e6f742073657400000000000060448201526064016200008c565b6000826001600160401b0316116200013d5760405162461bcd60e51b81526020600482015260126024820152711a5b9a5d08189b1bd8dac81b9bdd081cd95d60721b60448201526064016200008c565b60008163ffffffff1611620001955760405162461bcd60e51b815260206004820152601360248201527f706f6f6c20776569676874206e6f74207365740000000000000000000000000060448201526064016200008c565b6001600160a01b0393841660a05291831660c05260028054949093166080526001600160401b0316640100000000026001600160601b031990931663ffffffff9091161791909117905562000291565b6001600160a01b0381168114620001fb57600080fd5b50565b600080600080600060a086880312156200021757600080fd5b85516200022481620001e5565b60208701519095506200023781620001e5565b60408701519094506200024a81620001e5565b60608701519093506001600160401b03811681146200026857600080fd5b608087015190925063ffffffff811681146200028357600080fd5b809150509295509295909350565b60805160a05160c0516124ed6200034d600039600081816103bd01528181610f22015281816116910152818161173801528181611e2c0152611eba015260008181610396015281816104680152818161053b01528181610621015281816106b80152818161097801528181610aa301528181610b3901528181610baf01528181610ceb01528181610d89015281816110eb0152611c110152600081816101cc0152818161043b01528181610f4501526110c001526124ed6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063952e68cf116100c3578063c45a01551161007c578063c45a015514610391578063cbdf382c146103b8578063e8d3cad5146103df578063f9fc0d071461040b578063fa213bd614610413578063fff6cae91461041c57600080fd5b8063952e68cf146102e15780639e2c8a5b146102f4578063a156dc2814610307578063a1aab33f1461031a578063a87430ba1461033f578063beb0ed6c1461038857600080fd5b806329eb5f2c1161011557806329eb5f2c146102545780634087aeb7146102865780634ce0f9a61461029957806357e871e71461029f57806370a08231146102a55780638e169d47146102ce57600080fd5b8063037a417c1461015d57806315188a1b146101825780631984db99146101975780631da10d91146101b857806322adc2fd146101c75780632726b506146101ee575b600080fd5b610165610424565b6040516001600160a01b0390911681526020015b60405180910390f35b6101956101903660046121d9565b6104e8565b005b6101aa6101a536600461222a565b61050b565b604051908152602001610179565b60405160008152602001610179565b6101657f000000000000000000000000000000000000000000000000000000000000000081565b6102016101fc366004612247565b6108aa565b6040516101799190600060a082019050825182526020830151602083015260408301516001600160401b038082166040850152806060860151166060850152505060808301511515608083015292915050565b60025461026e90600160201b90046001600160401b031681565b6040516001600160401b039091168152602001610179565b610195610294366004612285565b61096d565b426101aa565b436101aa565b6101aa6102b336600461222a565b6001600160a01b031660009081526001602052604090205490565b6101aa6102dc3660046122a2565b610a3c565b6101956102ef3660046121d9565b610a5f565b6101956103023660046122a2565b610a6c565b6101aa6103153660046122a2565b610a77565b60025461032a9063ffffffff1681565b60405163ffffffff9091168152602001610179565b61036d61034d36600461222a565b600160208190526000918252604090912080549181015460029091015483565b60408051938452602084019290925290820152606001610179565b6101aa60045481565b6101657f000000000000000000000000000000000000000000000000000000000000000081565b6101657f000000000000000000000000000000000000000000000000000000000000000081565b6101aa6103ed36600461222a565b6001600160a01b031660009081526001602052604090206003015490565b610195610a89565b6101aa60035481565b610195610a97565b60405163091465f760e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009182917f00000000000000000000000000000000000000000000000000000000000000001690631228cbee9060240160206040518083038186803b1580156104aa57600080fd5b505afa1580156104be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e291906122c4565b92915050565b6104f0610aa1565b6104fb336000610ede565b50610507338383611232565b5050565b6002546000908190600160201b90046001600160401b031643118015610532575060045415155b156107a05760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663083c63236040518163ffffffff1660e01b815260040160206040518083038186803b15801561059257600080fd5b505afa1580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca91906122e1565b63ffffffff16905060008143116105fe57600254600160201b90046001600160401b0316436105f99190612314565b61061b565b60025461061b90600160201b90046001600160401b031683612314565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b091906122e1565b63ffffffff167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663642220096040518163ffffffff1660e01b815260040160206040518083038186803b15801561070f57600080fd5b505afa158015610723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610747919061232b565b6002546001600160c01b0391909116906107679063ffffffff1685612354565b6107719190612354565b61077b9190612373565b905060035461078c82600454610a77565b6107969190612395565b93505050506107a5565b506003545b6001600160a01b03831660009081526001602081815260408084208151608081018352815481529381015484840152600281015484830152600381018054835181860281018601909452808452919360608601939290879084015b828210156108785760008481526020908190206040805160a0810182526003860290920180548352600180820154848601526002909101546001600160401b0380821693850193909352600160401b81049092166060840152600160801b90910460ff16151560808301529083529092019101610800565b5050505081525050905060008160400151610897836020015185610a3c565b6108a19190612314565b95945050505050565b6040805160a0810182526000808252602080830182905282840182905260608301829052608083018290526001600160a01b038616825260019052919091206003018054839081106108fe576108fe6123ad565b60009182526020918290206040805160a081018252600393909302909101805483526001810154938301939093526002909201546001600160401b0380821693830193909352600160401b81049092166060820152600160801b90910460ff1615156080820152905092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109da5760405162461bcd60e51b815260206004820152600d60248201526c1858d8d95cdcc819195b9a5959609a1b60448201526064015b60405180910390fd5b6002546040805163ffffffff9283168152918316602083015233917f06555fe9dc8cbe328585a0c60ae1b7aafe71c28a706c2769d6cb4ee6e3e44e46910160405180910390a26002805463ffffffff191663ffffffff92909216919091179055565b600064e8d4a51000610a4e8385612354565b610a589190612373565b9392505050565b6105073383836000611584565b61050733838361199d565b600081610a4e64e8d4a5100085612354565b610a94336001610ede565b50565b610a9f610aa1565b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639f1dc9bd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610afa57600080fd5b505afa158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3291906123c3565b15610bab577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ca89231b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b9257600080fd5b505af1158015610ba6573d6000803e3d6000fd5b505050505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663083c63236040518163ffffffff1660e01b815260040160206040518083038186803b158015610c0657600080fd5b505afa158015610c1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3e91906122e1565b60025463ffffffff919091169150600160201b90046001600160401b03168111610c655750565b600254600160201b90046001600160401b03164311610c815750565b600454610cb15750600280546bffffffffffffffff000000001916600160201b436001600160401b031602179055565b6000814311610cc05743610cc2565b815b600254909150600090610ce590600160201b90046001600160401b031683612314565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663642220096040518163ffffffff1660e01b815260040160206040518083038186803b158015610d4257600080fd5b505afa158015610d56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7a919061232b565b6001600160c01b0316905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b158015610de057600080fd5b505afa158015610df4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1891906122e1565b60025463ffffffff9182169116610e2f8486612354565b610e399190612354565b610e439190612373565b9050610e5181600454610a77565b60036000828254610e629190612395565b9091555050600280546bffffffffffffffff000000001916600160201b6001600160401b03878116820292909217928390556003546040805191825291909304909116602083015233917f5ffbf9ce09d035b92503aad17a31b3d37ca5cd887b63701ddc2200be77d9ccc7910160405180910390a25050505050565b60008115610eee57610eee610aa1565b610ef783611cce565b905080610f06575060006104e2565b6001600160a01b038084166000908152600160205260409020907f000000000000000000000000000000000000000000000000000000000000000081167f000000000000000000000000000000000000000000000000000000000000000090911614156110a9576000610f7d620f42406002612354565b610f879084612354565b905060006040518060a00160405280858152602001838152602001610fa94290565b6001600160401b03168152602001610fc5426301e13380612395565b6001600160401b0390811682526001602092830181905260038088018054808401825560009182528582208751919093029092019182559385015191810191909155604084015160029091018054606086015160808701511515600160801b0260ff60801b19918616600160401b026001600160801b03199093169490951693909317179190911691909117905584549192508591859190611068908490612395565b92505081905550818360010160008282546110839190612395565b92505081905550816004600082825461109c9190612395565b909155506111cf92505050565b60405163091465f760e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631228cbee9060240160206040518083038186803b15801561112f57600080fd5b505afa158015611143573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116791906122c4565b6040516344cc892d60e01b81526001600160a01b03878116600483015260248201869052919250908216906344cc892d90604401600060405180830381600087803b1580156111b557600080fd5b505af11580156111c9573d6000803e3d6000fd5b50505050505b82156111eb576111e58160010154600354610a3c565b60028201555b6040518281526001600160a01b0385169033907ff3055bc8d92d9c8d2f12b45d112dd345cd2cfd17292b8d65c5642ac6f912dfd79060200160405180910390a35092915050565b42816001600160401b03161161128a5760405162461bcd60e51b815260206004820152601c60248201527f6c6f636b2073686f756c6420626520696e20746865206675747572650000000060448201526064016109d1565b6001600160a01b0383166000908152600160205260408120600381018054919291859081106112bb576112bb6123ad565b906000526020600020906003020190508060020160089054906101000a90046001600160401b03166001600160401b0316836001600160401b0316116113365760405162461bcd60e51b815260206004820152601060248201526f696e76616c6964206e6577206c6f636b60801b60448201526064016109d1565b60028101546001600160401b03166113d1576301e13380611360426001600160401b038616612314565b11156113ae5760405162461bcd60e51b815260206004820152601b60248201527f6d6178206c6f636b20706572696f64206973203336352064617973000000000060448201526064016109d1565b60028101805467ffffffffffffffff1916426001600160401b0316179055611446565b60028101546301e13380906113ef906001600160401b0316856123e5565b6001600160401b031611156114465760405162461bcd60e51b815260206004820152601b60248201527f6d6178206c6f636b20706572696f64206973203336352064617973000000000060448201526064016109d1565b6002810180546001600160401b03808616600160401b9081026fffffffffffffffff000000000000000019841681179485905585546000959094620f4240946301e133809486946114a394908316938316939093179204166123e5565b6001600160401b03166114b69190612354565b6114c09190612373565b6114ca9190612395565b6114d49190612354565b6001808401805490839055908501549192509082906114f4908390612314565b6114fe9190612395565b60018501556004548290611513908390612314565b61151d9190612395565b6004556002830154604080518881526001600160401b039283166020820152918716908201526001600160a01b038816907f85daa0d8a4afa74e5bd57c0f5d2cddf52920ec882a02b8d3f646c972b4cfb6b49060600160405180910390a250505050505050565b600083116115c25760405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc8185b5bdd5b9d60aa1b60448201526064016109d1565b6001600160401b0382161580611601575042826001600160401b031611801561160157506301e133806115fe426001600160401b038516612314565b11155b6116455760405162461bcd60e51b81526020600482015260156024820152741a5b9d985b1a59081b1bd8dac81a5b9d195c9d985b605a1b60448201526064016109d1565b61164d610aa1565b6001600160a01b038416600090815260016020526040902080541561167957611677856000610ede565b505b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156116db57600080fd5b505afa1580156116ef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611713919061240d565b9050611720333087611dcf565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561178257600080fd5b505afa158015611796573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ba919061240d565b905060006117c88383612314565b9050600080876001600160401b0316116117e35760006117e5565b425b905086600083620f42406301e13380816117ff87876123e5565b6001600160401b03166118129190612354565b61181c9190612373565b6118269190612395565b6118309190612354565b90506000811161184257611842612426565b6040805160a08101825285815260208082018481526001600160401b03808816948401948552868116606085019081528d1515608086019081526003808f018054600181810183556000928352978220895191909302909201918255945195810195909555955160029094018054915196511515600160801b0260ff60801b19978416600160401b026001600160801b0319909316959093169490941717949094169390931790558854909186918a91906118fe908490612395565b92505081905550818860010160008282546119199190612395565b925050819055506119308860010154600354610a3c565b8860020181905550816004600082825461194a9190612395565b90915550506040518b81526001600160a01b038d169033907f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd79060200160405180910390a3505050505050505050505050565b600081116119db5760405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc8185b5bdd5b9d60aa1b60448201526064016109d1565b6001600160a01b038316600090815260016020526040812060038101805491929185908110611a0c57611a0c6123ad565b6000918252602090912060039091020160028101548154919250600160801b900460ff1690841115611a775760405162461bcd60e51b8152602060048201526014602482015273616d6f756e742065786365656473207374616b6560601b60448201526064016109d1565b611a7f610aa1565b611a8a866000610ede565b5060018201548254600090611aa0908790612314565b6002850154620f4240906301e13380908290611acf906001600160401b0380821691600160401b9004166123e5565b6001600160401b0316611ae29190612354565b611aec9190612373565b611af69190612395565b611b009190612354565b8454909150611b10908790612314565b611b6357846003018781548110611b2957611b296123ad565b6000918252602082206003909102018181556001810191909155600201805470ffffffffffffffffffffffffffffffffff19169055611b84565b85846000016000828254611b779190612314565b9091555050600184018190555b85856000016000828254611b989190612314565b909155505060018501548190611baf908490612314565b611bb99190612395565b60018601819055600354611bcd9190610a3c565b60028601556004548190611be2908490612314565b611bec9190612395565b6004558215611c7a576040516371bdbbb560e11b8152336004820152602481018790527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e37b776a90604401600060405180830381600087803b158015611c5d57600080fd5b505af1158015611c71573d6000803e3d6000fd5b50505050611c84565b611c843387611e5d565b6040518681526001600160a01b0389169033907fd8654fcc8cf5b36d30b3f5e4688fc78118e6d68de60b9994e09902268b57c3e39060200160405180910390a35050505050505050565b6001600160a01b038116600090815260016020818152604080842081516080810183528154815293810154848401526002810154848301526003810180548351818602810186019094528084528695949293606086019390929190879084015b82821015611da65760008481526020908190206040805160a0810182526003860290920180548352600180820154848601526002909101546001600160401b0380821693850193909352600160401b81049092166060840152600160801b90910460ff16151560808301529083529092019101611d2e565b505050508152505090508060400151611dc58260200151600354610a3c565b610a589190612314565b60026000541415611e225760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109d1565b6002600055611e537f0000000000000000000000000000000000000000000000000000000000000000848484611ee9565b5050600160005550565b60026000541415611eb05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109d1565b6002600055611ee07f00000000000000000000000000000000000000000000000000000000000000008383611f5a565b50506001600055565b6040516001600160a01b0380851660248301528316604482015260648101829052611f549085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611f8f565b50505050565b6040516001600160a01b038316602482015260448101829052611f8a90849063a9059cbb60e01b90606401611f1d565b505050565b6000611fe4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166120619092919063ffffffff16565b805190915015611f8a578080602001905181019061200291906123c3565b611f8a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109d1565b60606120708484600085612078565b949350505050565b6060824710156120d95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109d1565b843b6121275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109d1565b600080866001600160a01b031685876040516121439190612468565b60006040518083038185875af1925050503d8060008114612180576040519150601f19603f3d011682016040523d82523d6000602084013e612185565b606091505b50915091506121958282866121a0565b979650505050505050565b606083156121af575081610a58565b8251156121bf5782518084602001fd5b8160405162461bcd60e51b81526004016109d19190612484565b600080604083850312156121ec57600080fd5b8235915060208301356001600160401b038116811461220a57600080fd5b809150509250929050565b6001600160a01b0381168114610a9457600080fd5b60006020828403121561223c57600080fd5b8135610a5881612215565b6000806040838503121561225a57600080fd5b823561226581612215565b946020939093013593505050565b63ffffffff81168114610a9457600080fd5b60006020828403121561229757600080fd5b8135610a5881612273565b600080604083850312156122b557600080fd5b50508035926020909101359150565b6000602082840312156122d657600080fd5b8151610a5881612215565b6000602082840312156122f357600080fd5b8151610a5881612273565b634e487b7160e01b600052601160045260246000fd5b600082821015612326576123266122fe565b500390565b60006020828403121561233d57600080fd5b81516001600160c01b0381168114610a5857600080fd5b600081600019048311821515161561236e5761236e6122fe565b500290565b60008261239057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156123a8576123a86122fe565b500190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156123d557600080fd5b81518015158114610a5857600080fd5b60006001600160401b0383811690831681811015612405576124056122fe565b039392505050565b60006020828403121561241f57600080fd5b5051919050565b634e487b7160e01b600052600160045260246000fd5b60005b8381101561245757818101518382015260200161243f565b83811115611f545750506000910152565b6000825161247a81846020870161243c565b9190910192915050565b60208152600082518060208401526124a381604085016020870161243c565b601f01601f1916919091016040019291505056fea2646970667358221220f55b6f9d7a9b72211fc623b526d841b601a0229422c3464a90ea05a5f516549664736f6c63430008090033";

export class ZStakePoolBase__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _wild: string,
    _factory: string,
    _poolToken: string,
    _initBlock: BigNumberish,
    _weight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZStakePoolBase> {
    return super.deploy(
      _wild,
      _factory,
      _poolToken,
      _initBlock,
      _weight,
      overrides || {}
    ) as Promise<ZStakePoolBase>;
  }
  getDeployTransaction(
    _wild: string,
    _factory: string,
    _poolToken: string,
    _initBlock: BigNumberish,
    _weight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wild,
      _factory,
      _poolToken,
      _initBlock,
      _weight,
      overrides || {}
    );
  }
  attach(address: string): ZStakePoolBase {
    return super.attach(address) as ZStakePoolBase;
  }
  connect(signer: Signer): ZStakePoolBase__factory {
    return super.connect(signer) as ZStakePoolBase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZStakePoolBaseInterface {
    return new utils.Interface(_abi) as ZStakePoolBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZStakePoolBase {
    return new Contract(address, _abi, signerOrProvider) as ZStakePoolBase;
  }
}
