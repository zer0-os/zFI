/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ZStakeCorePool,
  ZStakeCorePoolInterface,
} from "../ZStakeCorePool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_fromVal",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "_toVal",
        type: "uint32",
      },
    ],
    name: "PoolWeightUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lockedFrom",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lockedUntil",
        type: "uint64",
      },
    ],
    name: "StakeLockUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "yieldRewardsPerWeight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lastYieldDistribution",
        type: "uint64",
      },
    ],
    name: "Synchronized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_by",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "YieldClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wild",
        type: "address",
      },
      {
        internalType: "contract zStakePoolFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_initBlock",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_weight",
        type: "uint32",
      },
    ],
    name: "__zStakePoolBase__init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardLockPeriod",
        type: "uint256",
      },
    ],
    name: "changeRewardLockPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "contract zStakePoolFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositId",
        type: "uint256",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "lockedFrom",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "lockedUntil",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isYield",
            type: "bool",
          },
        ],
        internalType: "struct IPool.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getDepositsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ilv",
        type: "address",
      },
      {
        internalType: "contract zStakePoolFactory",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_initBlock",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "_weight",
        type: "uint32",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFlashPool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastYieldDistribution",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "now256",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "pendingYieldRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolTokenReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardLockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerWeight",
        type: "uint256",
      },
    ],
    name: "rewardToWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_weight",
        type: "uint32",
      },
    ],
    name: "setWeight",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_lockUntil",
        type: "uint64",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stakeAsPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testFunc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_depositId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "lockedUntil",
        type: "uint64",
      },
    ],
    name: "updateStakeLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "subYieldRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usersLockingWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weight",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerWeight",
        type: "uint256",
      },
    ],
    name: "weightToReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "wild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldRewardsPerWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526301e13380606d5534801561001857600080fd5b506001600055612c4a8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638e169d471161011a578063c45a0155116100ad578063f2fde38b1161007c578063f2fde38b146104e7578063f9fc0d07146104fa578063fa213bd614610502578063feef6c681461050b578063fff6cae91461051e57600080fd5b8063c45a01551461048c578063cbdf382c1461049f578063ce111541146104b2578063e8d3cad5146104bb57600080fd5b8063a1aab33f116100e9578063a1aab33f146103fa578063a87430ba14610426578063beb0ed6c14610470578063c1db28691461047957600080fd5b80638e169d47146103ae578063952e68cf146103c15780639e2c8a5b146103d4578063a156dc28146103e757600080fd5b80634087aeb7116101925780635ccbdcc0116101615780635ccbdcc01461036357806370a082311461036c578063715018a6146103955780638da5cb5b1461039d57600080fd5b80634087aeb71461033157806344cc892d146103445780634ce0f9a61461035757806357e871e71461035d57600080fd5b806322adc2fd116101ce57806322adc2fd146102735780632726b5061461028657806329eb5f2c146102ec57806333f234061461031e57600080fd5b8063037a417c1461020057806315188a1b146102255780631984db991461023a5780631da10d911461025b575b600080fd5b610208610526565b6040516001600160a01b0390911681526020015b60405180910390f35b610238610233366004612864565b6105af565b005b61024d6102483660046128a5565b6105d2565b60405190815260200161021c565b610263600081565b604051901515815260200161021c565b606654610208906001600160a01b031681565b6102996102943660046128c2565b610895565b60405161021c9190600060a082019050825182526020830151602083015260408301516001600160401b038082166040850152806060860151166060850152505060808301511515608083015292915050565b60695461030690600160c01b90046001600160401b031681565b6040516001600160401b03909116815260200161021c565b61023861032c366004612900565b610958565b61023861033f36600461296f565b610b8e565b6102386103523660046128c2565b610c4b565b4261024d565b4361024d565b61024d606d5481565b61024d61037a3660046128a5565b6001600160a01b031660009081526067602052604090205490565b610238610eb5565b6034546001600160a01b0316610208565b61024d6103bc36600461298c565b610eeb565b6102386103cf366004612864565b610f0e565b6102386103e236600461298c565b610f1b565b61024d6103f536600461298c565b610f26565b60695461041190600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161021c565b6104556104343660046128a5565b60676020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161021c565b61024d606b5481565b6102386104873660046129ae565b610f38565b606854610208906001600160a01b031681565b606954610208906001600160a01b031681565b61024d606c5481565b61024d6104c93660046128a5565b6001600160a01b031660009081526067602052604090206003015490565b6102386104f53660046128a5565b610fb1565b61023861104c565b61024d606a5481565b610238610519366004612900565b611057565b6102386110d4565b60685460665460405163091465f760e11b81526001600160a01b03918216600482015260009283921690631228cbee9060240160206040518083038186803b15801561057157600080fd5b505afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906129c7565b92915050565b6105b76110d8565b6105c2336000611319565b506105ce33838361135e565b5050565b6069546000908190600160c01b90046001600160401b0316431180156105f95750606b5415155b1561078757606954600090600160c01b90046001600160401b03164361061f91906129fa565b90506000606860009054906101000a90046001600160a01b03166001600160a01b03166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b15801561067157600080fd5b505afa158015610685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a99190612a11565b63ffffffff16606860009054906101000a90046001600160a01b03166001600160a01b0316635a6497d56040518163ffffffff1660e01b815260040160206040518083038186803b1580156106fd57600080fd5b505afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107359190612a2e565b60695461074f90600160a01b900463ffffffff1685612a47565b6107599190612a47565b6107639190612a66565b9050606a5461077482606b54610f26565b61077e9190612a88565b9250505061078c565b50606a545b6001600160a01b0383166000908152606760209081526040808320815160808101835281548152600182015481850152600282015481840152600382018054845181870281018701909552808552919492936060860193909290879084015b828210156108635760008481526020908190206040805160a0810182526003860290920180548352600180820154848601526002909101546001600160401b0380821693850193909352600160401b81049092166060840152600160801b90910460ff161515608083015290835290920191016107eb565b5050505081525050905060008160400151610882836020015185610eeb565b61088c91906129fa565b95945050505050565b6040805160a0810182526000808252602080830182905282840182905260608301829052608083018290526001600160a01b038616825260679052919091206003018054839081106108e9576108e9612aa0565b60009182526020918290206040805160a081018252600393909302909101805483526001810154938301939093526002909201546001600160401b0380821693830193909352600160401b81049092166060820152600160801b90910460ff1615156080820152905092915050565b600154610100900460ff1680610971575060015460ff16155b6109965760405162461bcd60e51b815260040161098d90612ab6565b60405180910390fd5b600154610100900460ff161580156109b8576001805461ffff19166101011790555b6109c06116b0565b6001600160a01b038516610a165760405162461bcd60e51b815260206004820152601d60248201527f57494c4420506f6f6c206663742061646472657373206e6f7420736574000000604482015260640161098d565b6001600160a01b038416610a6c5760405162461bcd60e51b815260206004820152601a60248201527f706f6f6c20746f6b656e2061646472657373206e6f7420736574000000000000604482015260640161098d565b6000836001600160401b031611610aba5760405162461bcd60e51b81526020600482015260126024820152711a5b9a5d08189b1bd8dac81b9bdd081cd95d60721b604482015260640161098d565b60008263ffffffff1611610b065760405162461bcd60e51b81526020600482015260136024820152721c1bdbdb081dd95a59da1d081b9bdd081cd95d606a1b604482015260640161098d565b606880546001600160a01b03199081166001600160a01b038881169190911790925560698054606680549093168a8516179092559186166001600160c01b031990911617600160a01b63ffffffff851602176001600160c01b0316600160c01b6001600160401b038616021790558015610b86576001805461ff00191690555b505050505050565b6068546001600160a01b03163314610bd85760405162461bcd60e51b815260206004820152600d60248201526c1858d8d95cdcc819195b9a5959609a1b604482015260640161098d565b60695460408051600160a01b90920463ffffffff90811683528316602083015233917f06555fe9dc8cbe328585a0c60ae1b7aafe71c28a706c2769d6cb4ee6e3e44e46910160405180910390a26069805463ffffffff909216600160a01b0263ffffffff60a01b19909216919091179055565b606854604051631e1c6a0760e01b81523360048201526001600160a01b0390911690631e1c6a079060240160206040518083038186803b158015610c8e57600080fd5b505afa158015610ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc69190612b04565b610d025760405162461bcd60e51b815260206004820152600d60248201526c1858d8d95cdcc819195b9a5959609a1b604482015260640161098d565b610d0a6110d8565b6001600160a01b0382166000908152606760205260409020805415610d3657610d34836000611319565b505b6000610d46620f42406002612a47565b610d509084612a47565b905060006040518060a00160405280858152602001838152602001610d724290565b6001600160401b03168152602001606d54610d8a4290565b610d949190612a88565b6001600160401b0316815260200160011515815250905083836000016000828254610dbf9190612a88565b9250508190555081836001016000828254610dda9190612a88565b90915550506003808401805460018181018355600092835260208084208651939095029094019182559284015192810192909255604083015160029092018054606085015160808601511515600160801b0260ff60801b196001600160401b03928316600160401b026001600160801b03199094169290961691909117919091179390931692909217909155606b8054849290610e78908490612a88565b92505081905550610e8f8360010154606a54610eeb565b836002018190555083606c6000828254610ea99190612a88565b90915550505050505050565b6034546001600160a01b03163314610edf5760405162461bcd60e51b815260040161098d90612b26565b610ee9600061172b565b565b600064e8d4a51000610efd8385612a47565b610f079190612a66565b9392505050565b6105ce338383600061177d565b6105ce3383836117a6565b600081610efd64e8d4a5100085612a47565b6034546001600160a01b03163314610f625760405162461bcd60e51b815260040161098d90612b26565b80606d541415610fac5760405162461bcd60e51b81526020600482015260156024820152741cd85b59481c995dd85c99131bd8dad4195c9a5bd9605a1b604482015260640161098d565b606d55565b6034546001600160a01b03163314610fdb5760405162461bcd60e51b815260040161098d90612b26565b6001600160a01b0381166110405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161098d565b6110498161172b565b50565b611049336001611319565b600154610100900460ff1680611070575060015460ff16155b61108c5760405162461bcd60e51b815260040161098d90612ab6565b600154610100900460ff161580156110ae576001805461ffff19166101011790555b6110bb8686868686610958565b8015610b86576001805461ff0019169055505050505050565b610ee95b606954600160c01b90046001600160401b031643116110f357565b606b5461111c57606980546001600160c01b0316600160c01b436001600160401b031602179055565b606954439060009061113e90600160c01b90046001600160401b0316836129fa565b90506000606860009054906101000a90046001600160a01b03166001600160a01b0316635a6497d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561119057600080fd5b505afa1580156111a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c89190612a2e565b90506000606860009054906101000a90046001600160a01b03166001600160a01b03166396c82e576040518163ffffffff1660e01b815260040160206040518083038186803b15801561121a57600080fd5b505afa15801561122e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112529190612a11565b60695463ffffffff91821691600160a01b909104166112718486612a47565b61127b9190612a47565b6112859190612a66565b905061129381606b54610f26565b606a60008282546112a49190612a88565b9091555050606980546001600160c01b0316600160c01b6001600160401b0387811682029290921792839055606a546040805191825291909304909116602083015233917f5ffbf9ce09d035b92503aad17a31b3d37ca5cd887b63701ddc2200be77d9ccc7910160405180910390a250505050565b600061132583836118ca565b6066546069549192506001600160a01b03918216911614156105a95780606c60008282546113539190612a88565b909155505092915050565b42816001600160401b0316116113b65760405162461bcd60e51b815260206004820152601c60248201527f6c6f636b2073686f756c6420626520696e207468652066757475726500000000604482015260640161098d565b6001600160a01b0383166000908152606760205260408120600381018054919291859081106113e7576113e7612aa0565b906000526020600020906003020190508060020160089054906101000a90046001600160401b03166001600160401b0316836001600160401b0316116114625760405162461bcd60e51b815260206004820152601060248201526f696e76616c6964206e6577206c6f636b60801b604482015260640161098d565b60028101546001600160401b03166114fd576301e1338061148c426001600160401b0386166129fa565b11156114da5760405162461bcd60e51b815260206004820152601b60248201527f6d6178206c6f636b20706572696f642069732033363520646179730000000000604482015260640161098d565b60028101805467ffffffffffffffff1916426001600160401b0316179055611572565b60028101546301e133809061151b906001600160401b031685612b5b565b6001600160401b031611156115725760405162461bcd60e51b815260206004820152601b60248201527f6d6178206c6f636b20706572696f642069732033363520646179730000000000604482015260640161098d565b6002810180546001600160401b03808616600160401b9081026fffffffffffffffff000000000000000019841681179485905585546000959094620f4240946301e133809486946115cf9490831693831693909317920416612b5b565b6001600160401b03166115e29190612a47565b6115ec9190612a66565b6115f69190612a88565b6116009190612a47565b6001808401805490839055908501549192509082906116209083906129fa565b61162a9190612a88565b6001850155606b54829061163f9083906129fa565b6116499190612a88565b606b556002830154604080518881526001600160401b039283166020820152918716908201526001600160a01b038816907f85daa0d8a4afa74e5bd57c0f5d2cddf52920ec882a02b8d3f646c972b4cfb6b49060600160405180910390a250505050505050565b600154610100900460ff16806116c9575060015460ff16155b6116e55760405162461bcd60e51b815260040161098d90612ab6565b600154610100900460ff16158015611707576001805461ffff19166101011790555b61170f611ba9565b611717611c13565b8015611049576001805461ff001916905550565b603480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61178984848484611c73565b82606c600082825461179b9190612a88565b909155505050505050565b6001600160a01b0383166000908152606760205260408120600381018054919291859081106117d7576117d7612aa0565b60009182526020918290206040805160a0810182526003909302909101805483526001810154938301939093526002909201546001600160401b03808216938301849052600160401b820416606083015260ff600160801b909104161515608082015291501580611854575060608101516001600160401b031642115b6118a05760405162461bcd60e51b815260206004820152601860248201527f6465706f736974206e6f742079657420756e6c6f636b65640000000000000000604482015260640161098d565b82606c60008282546118b291906129fa565b909155506118c39050858585612050565b5050505050565b600081156118da576118da6110d8565b6118e383612365565b9050806118f2575060006105a9565b6001600160a01b038084166000908152606760205260409020606654606954919291821691161415611a5a57600061192e620f42406002612a47565b6119389084612a47565b905060006040518060a0016040528085815260200183815260200161195a4290565b6001600160401b03168152602001611976426301e13380612a88565b6001600160401b0390811682526001602092830181905260038088018054808401825560009182528582208751919093029092019182559385015191810191909155604084015160029091018054606086015160808701511515600160801b0260ff60801b19918616600160401b026001600160801b03199093169490951693909317179190911691909117905584549192508591859190611a19908490612a88565b9250508190555081836001016000828254611a349190612a88565b9250508190555081606b6000828254611a4d9190612a88565b90915550611b4692505050565b60685460665460405163091465f760e11b81526001600160a01b0391821660048201526000929190911690631228cbee9060240160206040518083038186803b158015611aa657600080fd5b505afa158015611aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ade91906129c7565b6040516344cc892d60e01b81526001600160a01b03878116600483015260248201869052919250908216906344cc892d90604401600060405180830381600087803b158015611b2c57600080fd5b505af1158015611b40573d6000803e3d6000fd5b50505050505b8215611b6257611b5c8160010154606a54610eeb565b60028201555b6040518281526001600160a01b0385169033907ff3055bc8d92d9c8d2f12b45d112dd345cd2cfd17292b8d65c5642ac6f912dfd79060200160405180910390a35092915050565b600154610100900460ff1680611bc2575060015460ff16155b611bde5760405162461bcd60e51b815260040161098d90612ab6565b600154610100900460ff16158015611717576001805461ffff19166101011790558015611049576001805461ff001916905550565b600154610100900460ff1680611c2c575060015460ff16155b611c485760405162461bcd60e51b815260040161098d90612ab6565b600154610100900460ff16158015611c6a576001805461ffff19166101011790555b6117173361172b565b60008311611cb15760405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc8185b5bdd5b9d60aa1b604482015260640161098d565b6001600160401b0382161580611cf0575042826001600160401b0316118015611cf057506301e13380611ced426001600160401b0385166129fa565b11155b611d345760405162461bcd60e51b81526020600482015260156024820152741a5b9d985b1a59081b1bd8dac81a5b9d195c9d985b605a1b604482015260640161098d565b611d3c6110d8565b6001600160a01b0384166000908152606760205260409020805415611d6857611d66856000611319565b505b6069546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611dac57600080fd5b505afa158015611dc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de49190612a2e565b9050611df1333087612466565b6069546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015611e3557600080fd5b505afa158015611e49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6d9190612a2e565b90506000611e7b83836129fa565b9050600080876001600160401b031611611e96576000611e98565b425b905086600083620f42406301e1338081611eb28787612b5b565b6001600160401b0316611ec59190612a47565b611ecf9190612a66565b611ed99190612a88565b611ee39190612a47565b905060008111611ef557611ef5612b83565b6040805160a08101825285815260208082018481526001600160401b03808816948401948552868116606085019081528d1515608086019081526003808f018054600181810183556000928352978220895191909302909201918255945195810195909555955160029094018054915196511515600160801b0260ff60801b19978416600160401b026001600160801b0319909316959093169490941717949094169390931790558854909186918a9190611fb1908490612a88565b9250508190555081886001016000828254611fcc9190612a88565b92505081905550611fe38860010154606a54610eeb565b886002018190555081606b6000828254611ffd9190612a88565b90915550506040518b81526001600160a01b038d169033907f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd79060200160405180910390a3505050505050505050505050565b6000811161208e5760405162461bcd60e51b815260206004820152600b60248201526a1e995c9bc8185b5bdd5b9d60aa1b604482015260640161098d565b6001600160a01b0383166000908152606760205260408120600381018054919291859081106120bf576120bf612aa0565b6000918252602090912060039091020160028101548154919250600160801b900460ff169084111561212a5760405162461bcd60e51b8152602060048201526014602482015273616d6f756e742065786365656473207374616b6560601b604482015260640161098d565b6121326110d8565b61213d866000611319565b50600182015482546000906121539087906129fa565b6002850154620f4240906301e13380908290612182906001600160401b0380821691600160401b900416612b5b565b6001600160401b03166121959190612a47565b61219f9190612a66565b6121a99190612a88565b6121b39190612a47565b84549091506121c39087906129fa565b612216578460030187815481106121dc576121dc612aa0565b6000918252602082206003909102018181556001810191909155600201805470ffffffffffffffffffffffffffffffffff19169055612237565b8584600001600082825461222a91906129fa565b9091555050600184018190555b8585600001600082825461224b91906129fa565b9091555050600185015481906122629084906129fa565b61226c9190612a88565b60018601819055606a546122809190610eeb565b6002860155606b5481906122959084906129fa565b61229f9190612a88565b606b558215612311576068546040516371bdbbb560e11b8152336004820152602481018890526001600160a01b039091169063e37b776a90604401600060405180830381600087803b1580156122f457600080fd5b505af1158015612308573d6000803e3d6000fd5b5050505061231b565b61231b33876124e0565b6040518681526001600160a01b0389169033907fd8654fcc8cf5b36d30b3f5e4688fc78118e6d68de60b9994e09902268b57c3e39060200160405180910390a35050505050505050565b6001600160a01b038116600090815260676020908152604080832081516080810183528154815260018201548185015260028201548184015260038201805484518187028101870190955280855286959294606086019390929190879084015b8282101561243d5760008481526020908190206040805160a0810182526003860290920180548352600180820154848601526002909101546001600160401b0380821693850193909352600160401b81049092166060840152600160801b90910460ff161515608083015290835290920191016123c5565b50505050815250509050806040015161245c8260200151606a54610eeb565b610f0791906129fa565b600260005414156124b95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161098d565b60026000556069546124d6906001600160a01b0316848484612558565b5050600160005550565b600260005414156125335760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161098d565b600260005560695461254f906001600160a01b031683836125c9565b50506001600055565b6040516001600160a01b03808516602483015283166044820152606481018290526125c39085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526125fe565b50505050565b6040516001600160a01b0383166024820152604481018290526125f990849063a9059cbb60e01b9060640161258c565b505050565b6000612653826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126d09092919063ffffffff16565b8051909150156125f957808060200190518101906126719190612b04565b6125f95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161098d565b60606126df84846000856126e7565b949350505050565b6060824710156127485760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161098d565b843b6127965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161098d565b600080866001600160a01b031685876040516127b29190612bc5565b60006040518083038185875af1925050503d80600081146127ef576040519150601f19603f3d011682016040523d82523d6000602084013e6127f4565b606091505b509150915061280482828661280f565b979650505050505050565b6060831561281e575081610f07565b82511561282e5782518084602001fd5b8160405162461bcd60e51b815260040161098d9190612be1565b80356001600160401b038116811461285f57600080fd5b919050565b6000806040838503121561287757600080fd5b8235915061288760208401612848565b90509250929050565b6001600160a01b038116811461104957600080fd5b6000602082840312156128b757600080fd5b8135610f0781612890565b600080604083850312156128d557600080fd5b82356128e081612890565b946020939093013593505050565b63ffffffff8116811461104957600080fd5b600080600080600060a0868803121561291857600080fd5b853561292381612890565b9450602086013561293381612890565b9350604086013561294381612890565b925061295160608701612848565b91506080860135612961816128ee565b809150509295509295909350565b60006020828403121561298157600080fd5b8135610f07816128ee565b6000806040838503121561299f57600080fd5b50508035926020909101359150565b6000602082840312156129c057600080fd5b5035919050565b6000602082840312156129d957600080fd5b8151610f0781612890565b634e487b7160e01b600052601160045260246000fd5b600082821015612a0c57612a0c6129e4565b500390565b600060208284031215612a2357600080fd5b8151610f07816128ee565b600060208284031215612a4057600080fd5b5051919050565b6000816000190483118215151615612a6157612a616129e4565b500290565b600082612a8357634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612a9b57612a9b6129e4565b500190565b634e487b7160e01b600052603260045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b600060208284031215612b1657600080fd5b81518015158114610f0757600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006001600160401b0383811690831681811015612b7b57612b7b6129e4565b039392505050565b634e487b7160e01b600052600160045260246000fd5b60005b83811015612bb4578181015183820152602001612b9c565b838111156125c35750506000910152565b60008251612bd7818460208701612b99565b9190910192915050565b6020815260008251806020840152612c00816040850160208701612b99565b601f01601f1916919091016040019291505056fea2646970667358221220318fd078757847d442f5b17e8830a7c2ee9e5ee8c2ab99c68486643ccf38aec864736f6c63430008090033";

export class ZStakeCorePool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZStakeCorePool> {
    return super.deploy(overrides || {}) as Promise<ZStakeCorePool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZStakeCorePool {
    return super.attach(address) as ZStakeCorePool;
  }
  connect(signer: Signer): ZStakeCorePool__factory {
    return super.connect(signer) as ZStakeCorePool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZStakeCorePoolInterface {
    return new utils.Interface(_abi) as ZStakeCorePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZStakeCorePool {
    return new Contract(address, _abi, signerOrProvider) as ZStakeCorePool;
  }
}
